plugins {
  id 'java-library'
  id 'groovy'
  id 'com.katalon.gradle-plugin' version '0.1.2'
}

repositories {
  mavenCentral()
}

def pluginSources = [
  'Keywords',
  'Test Listeners',
  'Include/scripts/groovy'
]

sourceSets {
   main {
    groovy {
      srcDirs = pluginSources
      srcDir 'Libs' // generated by Katalon Studio
    }
  }
}

shadowJar {
  exclude 'Temp*.class'
}

groovydoc {
  source = pluginSources
  docTitle = 'Katalon REST Assured Demo'
}

configurations {
    all*.exclude group: 'org.codehaus.groovy'
}

dependencies {
    // REST Assured Core Dependencies (excluding Groovy)
    implementation('io.rest-assured:rest-assured:3.3.0') {
        exclude group: 'org.apache.groovy', module: 'groovy'
        exclude group: 'org.apache.groovy', module: 'groovy-xml'
        exclude group: 'org.apache.groovy', module: 'groovy-json'
        exclude group: 'org.codehaus.groovy', module: 'groovy'
        exclude group: 'org.codehaus.groovy', module: 'groovy-xml'
        exclude group: 'org.codehaus.groovy', module: 'groovy-json'
    }
    
    implementation('io.rest-assured:json-path:3.3.0') {
        exclude group: 'org.apache.groovy', module: 'groovy'
        exclude group: 'org.apache.groovy', module: 'groovy-json'
    }
    
    implementation('io.rest-assured:xml-path:3.3.0') {
        exclude group: 'org.apache.groovy', module: 'groovy'
        exclude group: 'org.apache.groovy', module: 'groovy-xml'
    }
    
    // JSON Schema Validation (excluding Groovy)
    implementation('io.rest-assured:json-schema-validator:3.3.0') {
        exclude group: 'org.apache.groovy', module: 'groovy'
        exclude group: 'org.apache.groovy', module: 'groovy-json'
    }
}

task katalonRunTest(type: Exec) {
    def testCase = project.hasProperty('testcase') ? project.getProperty('testcase') : ''
    commandLine 'C:\\Users\\iulia\\.katalon\\packages\\KSE-10.2.3\\katalon.exe', '-noSplash', '-runMode=console', '-executionProfile=default', '-projectPath=C:\\Users\\iulia\\IdeaProjects\\katalon-ai\\katalon-api', "-testCasePath=Test Cases/${testCase}", "-apiKey=API_KEY"
}

